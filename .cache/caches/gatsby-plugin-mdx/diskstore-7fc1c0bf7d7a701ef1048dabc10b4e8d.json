{"expireTime":9007200908150874000,"key":"gatsby-plugin-mdx-entire-payload-5a1e5e6e34cb50c56ab5b9eb84868a6c-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Projects","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":11,"offset":10},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":11,"offset":10},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This page contains only content that has the tag ","position":{"start":{"line":3,"column":1,"offset":12},"end":{"line":3,"column":50,"offset":61},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"project","position":{"start":{"line":3,"column":52,"offset":63},"end":{"line":3,"column":59,"offset":70},"indent":[]}}],"position":{"start":{"line":3,"column":50,"offset":61},"end":{"line":3,"column":61,"offset":72},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3,"column":61,"offset":72},"end":{"line":3,"column":62,"offset":73},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":12},"end":{"line":3,"column":62,"offset":73},"indent":[]}},{"type":"jsx","value":"<FeedItems filterByTags={['project']} />","position":{"start":{"line":5,"column":1,"offset":75},"end":{"line":5,"column":41,"offset":115},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":8,"column":1,"offset":118},"end":{"line":8,"column":31,"offset":148},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":8,"column":31,"offset":148}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar FeedItems = makeShortcode(\"FeedItems\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"projects\"\n  }, \"Projects\"), mdx(\"p\", null, \"This page contains only content that has the tag \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"project\"), \".\"), mdx(FeedItems, {\n    filterByTags: ['project'],\n    mdxType: \"FeedItems\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst FeedItems = makeShortcode(\"FeedItems\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"projects\"\n    }}>{`Projects`}</h1>\n    <p>{`This page contains only content that has the tag `}<strong parentName=\"p\">{`project`}</strong>{`.`}</p>\n    <FeedItems filterByTags={['project']} mdxType=\"FeedItems\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}